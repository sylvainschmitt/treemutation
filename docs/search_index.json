[["index.html", "TreeMutation Mutation in the tropical tree canopy. Preface", " TreeMutation Mutation in the tropical tree canopy. Sylvain Schmitt 2023-11-06 Preface Mutation in the tropical tree canopy. Have a nice reading. Sylvain "],["introduction.html", "Introduction", " Introduction Genetic diversity is an essential prerequisite for the capacity of all life to adapt to an ever-changing environment, and trees are notorious for their large standing genetic variation. There are several ways by which genetic variation can be incorporated or reshuffled in a species, but the only way of generating truly novel genetic diversity is through mutation. Scientists have dedicated considerable efforts to understand the roles of phylogeography, local adaptation, speciation, and hybridisation in modulating genetic diversity of tropical trees, however, our current knowledge of mutational processes in tropical trees is very limited. Recent advances in DNA sequencing techniques now allow us to detect single point mutations with unprecedented precision, which opens up exciting possibilities in mutation research. We propose to sequence the genomes of tropical rainforest trees in French Guiana, providing, for the first time, reference genomes of three Neotropical rainforest tree species. We will test intra-individual and inter-specific effects of low to extreme canopy sunlight exposure on the accumulation of novel mutations. The tree architecture (i.e., the branching pattern) will represent the null hypothesis for the pattern of accumulation of mutations. We will test the existence of a soma vs. germline segregation in tropical trees and the transmission of novel mutations from parent to offspring. The genomic data and knowledge to be generated in the project represent crucial information towards understanding genome evolution and its drivers in long-lived organisms. The comparison of mutational processes among tropical species, combined with the potential retention of mutations in offspring should be invaluable in assessing the importance of mutation rates in the creation and maintenance of Neotropical diversity. source: TreeMutation CEBA proposal "],["species.html", "Chapter 1 Species 1.1 Dicorynia guianensis 1.2 Sextonia rubra 1.3 Eschweilera coriacea", " Chapter 1 Species This chapter support the choice in species for the study. Table 1.1: Species characteristics. Family Genus Species Annual rings Reproductive phenology Genome (Mbp) Caryocaraceae Caryocar glabrum Species Annual 899 (48) Clusiaceae Moronobea coccinea Species Annual; Biennal 1508 (NA) Clusiaceae Platonia insignis Species Biennal 1748 (334) Clusiaceae Symphonia globulifera Species Annual 1836 (NA) Dichapetalaceae Tapura capitulifera Genus NA 948 (NA) Fabaceae Dicorynia guianensis Species Supra-annual 691 (NA) Fabaceae Vouacapoua americana Species Supra-annual 1028 (NA) Goupiaceae Goupia glabra Species NA 482 (NA) Lauraceae Sextonia rubra NA NA 1354 (NA) Lecythidaceae Eschweilera coriacea NA 1040 (NA) Myristicaceae Virola michelii Genus NA 1051 (NA) Salicaceae Laetia procera NA NA 419 (6) Sapotaceae Pradosia cochlearia NA NA 983 (NA) Vochysiaceae Qualea rosea NA NA 1179 (92) 1.1 Dicorynia guianensis Currently first choice due to: commercial interest rings relatively small genome (691 Mbp) fructification (irregular but no masting) About phenology: Loubry D., Déterminisme du comportement phénologique des arbres en forêttropicale humide de Guyane française (5° lat. N.), thèse, Université Paris VI, 104-123,1994. Caron, H., Dutech, C., &amp; Bandou, E. (2008). Variations spatiotemporelles du régime de reproduction de Dicorynia guianensis Amshoff (Caesalpiniaceae) en forêt guyanaise, (July), 2008 Norden, N., Chave, J., Belbenoit, P., Caubère, A., Châtelet, P., Forget, P. M., &amp; Thébaud, C. (2007). Mast fruiting is a frequent strategy in woody species of eastern South America. PLoS ONE, 2(10). https://doi.org/10.1371/journal.pone.0001079 Jésel Sébastien. 2005. Ecologie et dynamique de la régénération de Dicorynia guianensis (Caesalpiniaceae) dans une forêt guyanaise. Paris : INA-PG, 288 p. Thèse de doctorat : Ecologie forestière : Institut national agronomique Paris-Grignon 1.2 Sextonia rubra The objectives of TREEMUTATION are synergistically complementary with those of the proposed CEBA strategic project TREE-D. If both projects are retained, one of the three species to be studied will be a Sextonia rubra (Mez) van der Werff(Lauraceae) tree, an economically significant tree for French Guiana with remarkable antifungal and insecticidal properties (Rodrigues et al., 2011). Given that TREE-D will fell the target tree, the sampling design will be adapted accordingly: the target tree will not be part of any permanent plot, data on light environment and tree architecture would need to be obtained prior to tree cutting, and samples along the trunk will be incorporated. Furthermore, as Sextonia rubra is known to produce seasonal variation in wood chemistry (Ponton, Dupouey, Rose, Giuliani, &amp; Thiaudière, 2015), it could be aged dendrochronologically, so each branching event could be dated unambiguously. The collaboration between both projects will allow the study of the correlation between intra-individual genetic, endophytic, and chemical variance, allowing us, for the first time, to have an intimate look at the potential interplay among these three aspects of a tree. 1.3 Eschweilera coriacea One species of interest to include is Eschweilera coriacea (DC.) S.A. Mori (Lecythidaceae), the third-most abundant angiosperm tree in Amazonia (ter Steege et al., 2013)with high genetic diversity (Heuertz et al., 2019)and a broad ecological niche (S. Schmitt, pers. obs) in French Guiana and for which 15 individuals &gt; 30 cm diameter at breast height (28 ind. &gt; 10cm) are accessible from the COPAS.Local adaptive processes in Eschweilera coriacea and other members of the Parvifolia clade are currently being studied using gene capture, phenotypic traits, and detailed habitat data (Sylvain Schmitt’s thesis); having a full Eschweilera genome would facilitate the annotation of genic regions for research on selection processes (positive, negative, polygenic (Pritchard, Pickrell, &amp; Coop, 2010; Zeng et al., 2018)). It would also benefit collaborative research on phylo-and biogeography in the Lecythidaceae (projects CEBA RARETREE and GUYAMAZON LECYTOMICS). "],["site.html", "Chapter 2 Site 2.1 Paracou 2.2 Régina", " Chapter 2 Site This chapter support the choice of site for the study. 2.1 Paracou Plus: 4 LiDAR campaigns from 2004 to 2015 (Fig. ??) Proximity, (for phenology to collect flowers and fruits) Cons: Smaller trees Non destructive sampling Avoid trunk 2.2 Régina Plus: 1 LiDAR in 2016 (ONF, see Fig. 2.1 Possibility of clearing for drone Destructive sampling for tree rings Taller trees (older? and more cell divisions) Cons: Distance for phenology Figure 2.1: Regina individuals and MNC from ONF’s LiDAR. "],["individuals.html", "Chapter 3 Individuals 3.1 Angela - Dicorynia guyanensis 3.2 Sextonia rubra 3.3 Eschweilera sp.", " Chapter 3 Individuals This chapter support the choice of individuals for the study. 3.1 Angela - Dicorynia guyanensis Figure 3.1: Angela from the drone. 3.2 Sextonia rubra Need to report TreeD data here. 3.3 Eschweilera sp. 3.3.1 MN5505 - Regina E. coriacea following Pascal. Currently the’ best candidate near Regina. Figure 3.2: MN5505 from the ground. Figure 3.3: MN5505 from the drone. "],["sampling.html", "Chapter 4 Sampling", " Chapter 4 Sampling Cambium:Three samples of cambium from equidistant positions around the trunk at the tree base: these are expected to best approximate the genotype of the young seedling from which the tree has grown, as tree base cambium has had the lowest number of cell divisions since the germination of the seed (Hanlon et al., 2019). The consensus genotype of these three cambium samples will be used as the reference “zero mutations genotype” for the detection of mutations (WP4); Triplicate leaves:Three consecutive young leaves (biological replicates) from each of the eight chosen branches per tree will be collected (Orr et al, 2019). These sampling points should be from four pairs of branches (statistical replicates), where branches in each pair should experience contrasting light exposure as described in WP2 and Figure 1. Young leaves will be preferred as they have fewer secondary compounds and higher quality DNA can be extracted from them (Moreira &amp; Oliveira, 2011). Reproductive tissues:The trees will be revisited during flowering and fruiting season to collect pollen and/or fruits/zygotes from the selected branches of each tree. "],["genome-assembly.html", "Chapter 5 Genome assembly 5.1 Sequencing 5.2 Assembly workflow 5.3 Annotation workflow 5.4 Project description", " Chapter 5 Genome assembly Assembly of high-quality annotated reference genomes for three trees of three different species. 5.1 Sequencing CNRGV, Toulouse Genomic reads with PacBio HiFi Optical maps with Bionano Illumina HiSeq/NovaSeq 5.2 Assembly workflow 5.2.1 V1 The first assembly will be produced by William Marande in the CNRGV. 5.2.2 V2 A second version can be produced using a singularity and snakemake workflow developed by Ludovic Duvaux (possible collaboration). The wrokflow uses the following steps: converting bam files to fastq: converting HiFi reads to regular fastq with the package simlink 1 assembly of contigs: using hifiasm first but step to test additional assembler such as canu and spades removing haplotigs: purge_dups and purge_haplotigs optical maps: proprietary program of bionano &amp; manual curation by CNRGV to obatin a haploid optical map gap closing: using Illumina reads with SOAPdenovo2 quality check: Jellyfish KAT plot BUSCO synteny: Dgeanies jupiterPlot quast 5.3 Annotation workflow Automatic singularity &amp; snakemake workflow to annotate genomes: https://github.com/sylvainschmitt/genomeAnnotation . 5.4 Project description In each species, using a single genotype, such as leaves from a single branch, we will extract DNA and obtain long reads -2 runs of each Mini and Prometh ION targeting a total coverage of 100x -and short reads -sequencing one of the libraries to be used for the detection of mutations (below) using Illumina NovaSeq6000 technology and targeting a minimum coverage of 100x. The sequencing services will be subcontracted to CEA Genoscope, Evry. Ideally, we would use cambium tissue to produce the reference genomes, however, since a limited amount of cambium tissue can be sampled per tree, we will use leaf tissue. Assembling the quality-filtered reads from both sequencing technologies will provide long scaffolds (Johnson et al., 2019). In each species, we will build an “optimal map” of the genome using high-resolution restriction maps from single, labelled molecules of DNA obtained through Bionano technology (subcontracted to CNRGV, Toulouse). In combination with the previous scaffolds this will provide a chromosomal assembly.The three genomes will be annotated using automated pipelines (Bolger, Arsova, &amp; Usadel, 2018). Seedling original genotype (T4.1): Short read sequencing data will be demultiplexed, quality-filtered, and mapped to the reference genomes. The “zero mutation reference” genotype will be constructed from the consensus genotype calls obtained from short read sequencing of the three cambium samples using a standard variant calling approach such as GATK (“Best Practices for Variant Calling with the GATK,” 2015). "],["mutations-detection.html", "Chapter 6 Mutations detection 6.1 In silico experiment 6.2 Swiss data - Schmid-Siegert et al. (2017) 6.3 Bordeaux data - Plomion et al. (2018) 6.4 Angela 6.5 Sextonia rubra 6.6 Hetre 6.7 Project description", " Chapter 6 Mutations detection This chapter briefly introduced the next chapters on the detection of mutations: Using an in silico virtual experiment Using swiss data from Schmid-Siegert et al. (2017) Using french data from Plomion et al. (2018) Using Angela sequences Using sequences from the Sextonia rubra Using sequences from the “Faux de Verzy” The three first analyses resulted in a published manuscript: https://peercommunityjournal.org/articles/10.24072/pcjournal.187/ 6.1 In silico experiment The in silico experiment uses the generateMutations and the detectMutations workflows to test the effect of coverage/sequencing depth and allelic frequency on the performance of 7 tools to detect mutations either generalist or specific to mutations. Figure 6.1: Generate mutations workflow. Figure 6.2: Detect mutations workflow. 6.2 Swiss data - Schmid-Siegert et al. (2017) We re-analyzed mutations from Schmid-Siegert et al. (2017) with Strelka2 and GATK to compare original and obtained mutations to show the interest of Strelka2 and high sequencing depth. Figure 6.3: Detect mutations workflow for Swiss data. 6.3 Bordeaux data - Plomion et al. (2018) We re-analyzed mutations from Plomion et al. (2018) with Strelka2 and Mutect2 to compare original and obtained mutations to show the interest of Strelka2 and high sequencing depth. Figure 6.4: Detect mutations workflow for Swiss data. 6.4 Angela Genome, heterozygous sites, cambial mutations and leaf mutations from sequences of Angela. Figure 6.5: Detect mutations workflow for Angela. 6.5 Sextonia rubra Genome, heterozygous sites, cambial mutations and leaf mutations from sequences of Sixto Figure 6.6: Detect mutations workflow for Sixto. 6.6 Hetre Mutations from sequences of the “Faux de Verzy”. Figure 6.7: Detect mutations workflow for Angela. 6.7 Project description For each species, we will extract DNA and construct 27 individually tagged genomic libraries to produce short read sequencing (see sampling strategy, WP2 above) with NovaSeq6000 SP technology, targeting aminimum of 50x coverage per library (70-90x should be realistic, we will go for 100x if possible). The possible sequencing depth affordable in the project will depend on the genome size of chosen species and some extent on fluctuating sequencing prices. Lab work will be conducted at Ecofog and PGTB (Biogeco); the sequencing will be subcontracted to CEA Genoscope, Evry. Detection of mutations (T4.2): For mutation detection, we will minimise the impact of library preparation and sequencing errors by retaining only mutations detected by comparison with the “zero mutation reference” (Hanlon et al 2019) and in each branch (Orr et al. 2019), giving a total of 9 genotype sampling points in each tree. We will quantify the occurrence of mutations in each of the 24 leaf libraries per tree using a high-sensitivity method (Cibulskis et al., 2013). De novomutations appear in single meristem cells and their abundance in tree tissues will depend on the specific cell’s divisions and contribution to generating tree tissues. Fixation of de novo mutations in tissues is expected to be rare and the expected time to fixation is long, see (Nicholson et al., 2018)for an example in humans. The detection of novel mutations must thus be sensitive to low allele copy number in tissues. For this reason, we will test and use mutation detection methods typically used in cancer mutation research, that are optimized for strong allelic frequency skews (Alioto et al., 2015).The artificial inclusion of in silicomutationsinto the reads and permutations among branch labels allows the estimation of the recovery rate of true mutations, the false negative rates, and the false positive rates (Orr et al., 2019). We will test whether the rate of accumulation of mutations is increased in high-light-exposed branches compared to those with low-light exposure accounting for the physical tree branches (tree architecture -WP3), the mutation history, and light environment (WP3). References "],["mutations-in-silico.html", "Chapter 7 Mutations in silico", " Chapter 7 Mutations in silico This chapter described the in silico experiment using the generateMutations and the detectMutations workflows to test the effect of coverage/sequencing depth and allelic frequency on the performance of 7 tools to detect mutations either generalist or specific to mutations. Report to the published manuscript: https://peercommunityjournal.org/articles/10.24072/pcjournal.187/ Figure 7.1: Performance of mutation detection tools with allelic fraction and coverage. The inferno, black to yellow, colour scale indicates the recall and the precision rates for each tool to detect mutations. Figure 7.2: Best performing mutation detection tools depending on allelic fraction and coverage. The best performing tools were defined on the best recall rate first and best precision rate second for precision rates above 0.9. The labels in white indicate the recall rate (R) and the precision rate (P) for the best performing tools. Figure 7.3: Variation in the performance of mutation detection tools with varying biological and sequencing parameters. The recall and the precision rates have been assessed for each tool to detect mutations with varying transition/transversion ratio, allelic fraction, and coverage. Tools to detect mutations include freebayes (red), MuSE (light green), Somatic Sniper (light blue), VarScan (pink), GATK (orange), Mutect2 (dark green), and Strelka2 (purple). Figure 7.4: Variation in the performance of mutation detection tools with varying biological and sequencing parameters. The recall and the precision rates have been assessed for each tool to detect mutations with varying transition/transversion ratio, allelic fraction, and coverage. Figure 7.5: Variation in the performance of mutation detection tools with varying biological and sequencing parameters. The recall and the precision rates have been assessed for each tool to detect mutations with varying transition/transversion ratio, allelic fraction, and coverage. Figure 7.6: Variation in the performance of mutation detection tools with varying biological and sequencing parameters. The recall and the precision rates have been assessed for each tool to detect mutations with varying transition/transversion ratio, allelic fraction, and coverage. Figure 7.7: Variation in the performance of mutation detection tools with varying biological and sequencing parameters. The recall and the precision rates have been assessed for each tool to detect mutations with varying transition/transversion ratio, allelic fraction, and coverage. Figure 7.8: Variation in the performance of mutation detection tools with varying biological and sequencing parameters. The recall and the precision rates have been assessed for each tool to detect mutations with varying transition/transversion ratio, allelic fraction, and coverage. "],["mutations-swiss.html", "Chapter 8 Mutations Swiss 8.1 Mutations from Schmid-Siegert on 3P 8.2 Strelka2 8.3 GATK 8.4 Conclusion", " Chapter 8 Mutations Swiss This chapter describes the reanalyses of data from Schmid-Siegert et al. (2017) currently done in the swiss branch of the detectMutations repository. 8.1 Mutations from Schmid-Siegert on 3P I reported the mutations (Tab. 8.1) from the supplementary table 2 from Schmid-Siegert et al. (2017), and aligned them back on the 3P genome (Fig. 8.1). I found back only 14 of the original 17 mutations from Napoleon Table 8.1: SNVs in the Napoleon Oak. Rerported from Schmid-Siegert et al. (2017). Mutation CHROM POS tumor REF ALT SNV1 Qrob_H2.3_Sc0000161 602274 Upper T C SNV2 Qrob_Chr09 2166134 Upper C T SNV3 Qrob_Chr05 56685984 Upper C T SNV4 Qrob_Chr05 25205243 Upper C T SNV5 Qrob_Chr05 44871901 Upper C T SNV6 Qrob_Chr01 39504822 Upper T A SNV7 Qrob_H2.3_Sc0000061 381637 Upper C T SNV8 Qrob_Chr04 37893394 Upper G A SNV9 Qrob_H2.3_Sc0000504 516352 Upper T A SNV10 Qrob_Chr04 36278589 Upper C T SNV13 Qrob_Chr08 54574817 Lower G A SNV14 Qrob_Chr09 30863836 Lower G A SNV16 Qrob_Chr05 9535260 Lower T C SNV17 Qrob_Chr07 215451 Lower G A Figure 8.1: Napoleon’s original mutations on the 3P genome. 8.2 Strelka2 Strelka2 produced 4.2 millions of candidate mutations. 8.2.1 Overlap with mutations from Schmid-Siegert I tried to find back Napoleon’s original mutations to have a look to their metrics. I found back only 12 out of the 14 expected mutations (86%) (Tab. 8.2 and Fig. 8.2). Beware, Strelka2 is detecting putative mutations in the normal sample ! I looked at different metrics for each (Fig. 8.3): mutation_DP and normal_DP are the read depth for the two sample, and shows as expected values between half and two times the mean coverage (60X) normal_altCountT1 is the number of alternate allele count in the normal sample, should be 0, but is equal to 3 and 4 (9% of reads) for two SNVs mutation_altCountT1 is the number of alternate allele count in the mutated sample, should be not too low, and is most the time above 5 The main conclusion is that the mutations detected by Schmid-Siegert et al. (2017) have not always no reads in the “normal” sample and that they show a wide variation of allelic frequency. Table 8.2: Overlap between candidate mutations and Napoleon’s original mutations. Mutation Mutated Normal Ref Alt Mutated AltCount Mutated RefCount Normal AltCount Normal RefCount Allelic fraction SNV1 upper lower T C 0 71 14 42 0.0000000 SNV1 lower upper T C 14 43 0 71 0.2500000 SNV2 upper lower C T 0 90 25 70 0.0000000 SNV2 lower upper C T 25 70 0 90 0.2631579 SNV3 upper lower G A 0 62 11 39 0.0000000 SNV3 lower upper G A 11 39 0 62 0.2200000 SNV4 upper lower C T 0 60 16 48 0.0000000 SNV4 lower upper C T 16 49 0 59 0.2500000 SNV5 upper lower C T 0 70 13 33 0.0000000 SNV5 lower upper C T 13 39 0 63 0.2826087 SNV6 upper lower A T 0 65 14 41 0.0000000 SNV6 lower upper A T 14 48 0 62 0.2545455 SNV8 upper lower G A 0 52 12 32 0.0000000 SNV8 lower upper G A 12 34 0 52 0.2727273 SNV9 upper lower T A 0 76 16 26 0.0000000 SNV9 lower upper T A 20 34 0 63 0.3809524 SNV10 upper lower C T 0 72 10 30 0.0000000 SNV10 lower upper C T 10 31 0 71 0.2500000 SNV13 upper lower C T 19 31 3 33 0.3958333 SNV13 lower upper C T 3 35 19 29 0.0833333 SNV16 upper lower T C 10 70 4 42 0.1694915 SNV17 upper lower G A 25 51 4 55 0.3287671 SNV17 lower upper G A 4 57 24 49 0.0677966 Figure 8.2: Overlap between candidate mutations and Napoleon’s original mutations: allele frequency (A) and positions on the 3P genome (B). Figure 8.3: Evaluation of the overlap between candidate mutations and Napoleon’s original mutations. 8.2.2 Filtering We filtered mutations with following filters: A read depth for the two sample between half and two times the mean coverage (normal_DP &lt;= 120, normal_DP &gt;= 30, mutation_DP &lt;= 120, mutation_DP &gt;= 30) A null number of alternate allele count in the normal sample (normal_altCount == 0) A minimum of 10 alternate allele count in the mutated sample (mutation_altCount &gt;= 10) We obtained 223 candidates (Fig 8.4). We then used the suggested automatic filter of Strelka2, resulting in a robust dataset of 87 mutations (Fig 8.5). Figure 8.4: Mutations retained after original filtering: allele frequency (A) and positions on the 3P genome (B). Figure 8.5: Mutations retained after robust filtering: allele frequency (A) and positions on the 3P genome (B). 8.3 GATK GATK produced 11.1 millions of candidates! 8.3.1 Overlap with mutations from Schmid-Siegert I tried to find back Napoleon’s original mutations to have a look to their metrics. I found back only 12 out of the 14 expected mutations (86%) (Tab. 8.3 and Fig. 8.6). I looked at different metrics for each (Fig. 8.3): mutation_DP and normal_DP are the read depth for the two sample, and shows as expected values between half and two times the mean coverage (60X) normal_altCountT1 is the number of alternate allele count in the normal sample, should be and is 0 mutation_altCountT1 is the number of alternate allele count in the mutated sample, should be not too low, and is most the time above 10 The main conclusion is that the mutations detected by Schmid-Siegert et al. (2017) have no reads in the “normal” sample using GATK with hard filtering which probably already removed low-DP copies in the normal sample, while Strelka2 detect them. Table 8.3: Overlap between candidate mutations and Napoleon’s original mutations. Mutation Mutated Normal Mutated AltCount Mutated RefCount Normal AltCount Normal RefCount Allelic fraction SNV1 lower upper 15 41 0 NA 0.2678571 SNV2 lower upper 25 70 0 NA 0.2631579 SNV3 lower upper 10 39 0 NA 0.2040816 SNV4 lower upper 15 49 0 NA 0.2343750 SNV5 lower upper 13 31 0 NA 0.2954545 SNV6 lower upper 13 45 0 NA 0.2241379 SNV8 lower upper 12 34 0 NA 0.2608696 SNV9 lower upper 17 24 0 NA 0.4146341 SNV10 lower upper 10 30 0 NA 0.2500000 SNV13 upper lower 19 29 0 NA 0.3958333 SNV16 upper lower 10 49 0 NA 0.1694915 SNV17 upper lower 25 51 0 NA 0.3289474 Figure 8.6: Overlap between candidate mutations and Napoleon’s original mutations: allele frequency (A) and positions on the 3P genome (B). Figure 8.7: Evaluation of the overlap between candidate mutations and Napoleon’s original mutations. 8.3.2 Filtering We filtered mutations with following filters: A read depth for the tumor sample between half and two times the mean coverage (tumor_DP &lt;= 120, tumor_DP &gt;= 30) A null number of alternate allele count in the normal sample (normal_altCount == 0) A minimum of 10 alternate allele count in the mutated sample (tumor_altCount &gt;= 10) An allelic frequency inferior to 0.5 (tumor_AF &lt;= 0.5) We obtained 510 611 candidates (Fig 8.8). We then looked for the overlap between GATK candidates and the suggested automatic filter of Strelka2, resulting in a robust dataset of 47 mutations (Fig 8.9). Figure 8.8: Mutations retained after original filtering: allele frequency (A) and positions on the 3P genome (B). Figure 8.9: Mutations retained after robust filtering: allele frequency (A) and positions on the 3P genome (B). 8.4 Conclusion Table 8.4: Size of the different datasets. Dataset Number of candidates Estimated total Schmid 12 17 GATK 510 611 709 182 Strelka2 51 71 Robust 41 57 Figure 8.10: Allele frequency for the different datasets. References "],["mutations-bordeaux.html", "Chapter 9 Mutations Bordeaux 9.1 Original mutations on 3P 9.2 Coverage 9.3 Strelka2 9.4 Mutect2 9.5 Conclusion 9.6 Swiss &amp; Bordeaux", " Chapter 9 Mutations Bordeaux This chapter describes the reanalyses of data from Plomion et al. (2018) currently done in the bordeaux branch of the detectMutations repository. 9.1 Original mutations on 3P I reported the original mutations (Tab. 9.1) from the supplementary table 5 from Plomion et al. (2018) and plotted them on the 3P genome (Fig. 9.1) after realignement from the haplome v2.3 to the public 3P genome. Table 9.1: SNVs in the 3P Oak. Rerported from Plomion et al. (2018). locus Mutation origin f(alt)pool CHROM POS Sc0000080_1329750 G/A 3P – between XL1 and XL2 0,0330 Qrob_Chr08 58757092 Sc0000573_185294 A/T 3P – between XL1 and XL2 0,0000 Qrob_H2.3_Sc0000573 185294 Sc0000010_1057132 G/A 3P – between XL1 and XL2 0,1154 Qrob_Chr03 13766652 Sc0000003_4011526 A/T 3P – between XL1 and XL2 0,0000 Qrob_Chr02 84928601 Sc0000010_758473 G/A 3P – between XL1 and XL2 0,0000 Qrob_Chr03 13467993 Sc0000015_2644541 G/T 3P – between XL1 and XL2 0,0000 Qrob_Chr03 50836623 Figure 9.1: Original mutations on the 3P genome. 9.2 Coverage Coverage are around 160X, this is high but strangely lower than expected, besides all data have been used this time. (Fig. 9.2). Figure 9.2: Coverage for Bordeaux’s libraries on chromosomes 1 to 4. 9.3 Strelka2 Strelka2 produced 3 millions of candidate mutations with unique position across the 3 branches. 9.3.1 Overlap with original mutations We found back all the 60 expected mutations (100%) (Tab. 9.2). Table 9.2: Overlap between candidate mutations and original mutations. Chromosome Position Mutated Normal Ref Alt Mutated AltCount Mutated RefCount Normal AltCount Normal RefCount Allelic fraction Qrob_Chr08 58757092 L1 L2 G C 0 119 0 60 0.0000000 Qrob_Chr08 58757092 L2 L1 G A 42 60 0 119 0.4117647 Qrob_Chr08 58757092 L1 L3 G C 0 119 0 60 0.0000000 Qrob_Chr08 58757092 L3 L1 G A 34 60 0 119 0.3617021 Qrob_H2.3_Sc0000573 185294 L2 L1 A T 14 57 0 86 0.1971831 Qrob_H2.3_Sc0000573 185294 L1 L3 A T 0 86 19 50 0.0000000 9.3.2 Filtering We filtered mutations with the original and a robust filters, adjusting the coverage to the coverage obtained: Original: A read depth for the two sample between half and two times the mean coverage (normal_DP &lt;= 320, normal_DP &gt;= 80, mutation_DP &lt;= 320, mutation_DP &gt;= 80) A null number of alternate allele count in the normal sample (normal_altCount == 0) A minimum of 10 alternate allele count in the mutated sample (mutation_altCount &gt;= 10) An allelic frequency inferior to 0.5 (tumor_AF &lt;= 0.5) A coherent temporal pattern (“XL1-XL2”, “XL2-L3”, “XL1-L1”, “XL2-L2”) Robust: A read depth for the two sample between half and two times the mean coverage (normal_DP &lt;= 320, normal_DP &gt;= 80, mutation_DP &lt;= 320, mutation_DP &gt;= 80) A null number of alternate allele count in the normal sample (normal_altCount == 0) A minimum of 10 alternate allele count in the mutated sample (mutation_altCount &gt;= 10) An allelic frequency inferior to 0.5 (tumor_AF &lt;= 0.5) Strelka 2 automatic filtering (Filter == PASS) A coherent temporal pattern (“XL1-XL2”, “XL2-L3”, “XL1-L1”, “XL2-L2”) We obtained 460 candidates (Fig 9.3) for the original filter, And in a robust dataset of 108 mutations (Fig 9.4). Figure 9.3: Mutations retained after original filtering: allele frequency (A) and positions on the 3P genome (B). Figure 9.4: Mutations retained after robust filtering: allele frequency (A) and positions on the 3P genome (B). 9.4 Mutect2 Mutect2 produced 4.6 millions of candidate mutations with unique position across the 3 branches. 9.4.1 Overlap with original mutations We tried to find back original mutations to have a look to their metrics. We found back 57 out of the 60 expected mutations (95%) (Tab. 9.3. which are exactly interestingly the same as Strelka2. Table 9.3: Overlap between candidate mutations and original mutations. Chromosome Position Mutated Normal Ref Alt Mutated AltCount Mutated RefCount Normal AltCount Normal RefCount Allelic fraction Qrob_Chr08 58757092 L2 L1 G A 35 55 0 113 0.3888889 Qrob_Chr08 58757092 L3 L1 G A 39 61 0 113 0.3900000 Qrob_H2.3_Sc0000573 185294 L2 L1 A T 15 52 0 84 0.2238806 Qrob_H2.3_Sc0000573 185294 L3 L1 A T 19 56 0 84 0.2533333 Qrob_Chr03 13766652 L2 L1 G A 43 5 0 77 0.8958333 Qrob_Chr03 13766652 L3 L1 G A 35 16 0 77 0.6862745 9.4.2 Filtering We filtered mutations with the original filter, adjusting the coverage to preliminary low coverage obtained: Original: A read depth for the two sample between half and two times the mean coverage (normal_DP &lt;= 320, normal_DP &gt;= 80, mutation_DP &lt;= 320, mutation_DP &gt;= 80) A null number of alternate allele count in the normal sample (normal_altCount == 0) A minimum of 10 alternate allele count in the mutated sample (mutation_altCount &gt;= 10) An allelic frequency inferior to 0.5 (tumor_AF &lt;= 0.5) A coherent temporal pattern (“XL1-XL2”, “XL2-L3”, “XL1-L1”, “XL2-L2”) We obtained 948 candidates (Fig 9.5) for the original filter. Figure 9.5: Mutations retained after original filtering: allele frequency (A) and positions on the 3P genome (B). 9.5 Conclusion Table 9.4: Size of the different datasets. Dataset Number of candidates Estimated total Plomion 58 69 Mutect2 464 552 Strelka2 121 144 Robust 87 104 Figure 9.6: Allele frequency for the different datasets. 9.6 Swiss &amp; Bordeaux References "],["mutations-angela.html", "Chapter 10 Mutations Angela 10.1 Quality check 10.2 Genome 10.3 Heterozygosity 10.4 Mutations filters 10.5 Leaf mutations 10.6 Mutations architecture 10.7 Phylogeny 10.8 Light &amp; annotation 10.9 Rate 10.10 Mutations for Fruits 10.11 Genes", " Chapter 10 Mutations Angela This chapter describes the analyses of Angela mutations currently done in the the angela branch of the detectMutations repository. 10.1 Quality check The results of multiQC are available for the haplotypes HS1 here and HS2 here. They globally all gave a green light for subsequent analyses. 10.2 Genome We compared the two haplophases and chose HS1 for contiguity and length (Fig. 10.1 and Fig. 10.2) as well as mean coverage and homogeneity (Fig. 10.4). Figure 10.1: Anchored scaffolds size-distribution for haplotypes HS1 and HS2 in Angela’s genome. Figure 10.2: BUSCO results for haplotypes HS1 and HS2. Figure 10.3: Coverage distribution. Distribution of the number of locations in the reference genome with a given depth of coverage. Figure 10.4: Genome coverage and GC-content on a 10-kb windows for the HS1 haplotype (scaffolds &gt; 2-Mb). Figure 10.5: Genome coverage and GC-content on a 10-kb windows for the HS2 haplotype (scaffolds &gt; 2-Mb). 10.2.1 Annotation 10.2.2 Mutations 10.2.3 Comp ## ## Call: ## glm(formula = mutations ~ percentage_gene, family = &quot;poisson&quot;, ## data = all) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.69760 0.02017 34.58 &lt;2e-16 *** ## percentage_gene -2.31318 0.15468 -14.96 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for poisson family taken to be 1) ## ## Null deviance: 8716.4 on 4134 degrees of freedom ## Residual deviance: 8474.1 on 4133 degrees of freedom ## AIC: 15578 ## ## Number of Fisher Scoring iterations: 5 ## ## Call: ## glm(formula = mutations ~ percentage_te, family = &quot;poisson&quot;, ## data = all) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.82114 0.01764 46.54 &lt;2e-16 *** ## percentage_te -0.37257 0.03857 -9.66 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for poisson family taken to be 1) ## ## Null deviance: 15698 on 4920 degrees of freedom ## Residual deviance: 15602 on 4919 degrees of freedom ## AIC: 24551 ## ## Number of Fisher Scoring iterations: 6 10.3 Heterozygosity We used k-mer analyses (21-mers) using jellyfish and the GenomeScope to estimate genetic diversity \\(\\pi=0.901%\\) (Fig. 10.6). Should I also estimate non-synonymous diversity with ORF annotation using transdecoder and SNPdat (https://phdpages.netlify.app/6b189d4142e8224bff99e28abd11cbfdd50c51b1/symcapture/annotation.html#synonymy)? We detected and filtered SNPs as follow: Raw=5M : raw result from GATK HaplotypeCaller + GenomicsDBImport + GenotypeGVCFs Biallelic=5.3M : biallelic sites with bcftools SNP=4.7M : SNPs with GATK Filtered=3.85M : SNPs with QUAL &lt; 30, QD &lt; 2, FS &gt; 60, SOR &gt; 3 using GATK Non-missing=3.84M : SNPs in all genotypes and individuals with plink Shared=3.84M : shared SNPs by at least 32 out of 33 individuals with bcftools Figure 10.6: GenomeScope Profile. Full results here: http://genomescope.org/analysis.php?code=ayEfgONEP1cFWw2yjhfb. 10.4 Mutations filters We removed all candidate mutations present in the heterozygous sites and in the raw candidate mutations from the cambium. We kept only mutations with no copy of the mutated allele in the normal sample (NAC, normal_altCount == 0). We tested independently the effect of 4 filters and look their effect on (1) the percentage kept, (2) the distribution of allelic frequencies, and (3) the overlap between filters: MAC: a minimum of 5 copies of the mutated allele in the mutated sample (mutation_altCount &gt;= 5) DP: a read depth for the two sample between the 5th quantile and the 95th quantile of the coverage of the corresponding library (normal_DP &lt;= high_cov, normal_DP &gt;= low_cov, mutation_DP &lt;= high_cov, mutation_DP &gt;= low_cov) BIO: the mutation is present in at least two biological replicates (2 leaves from the crown) EVS: Strelka 2 automatic filtering based on the empiric variant score (Filter == \"PASS\") MAC and EVS are the most stringent filters (Fig. 10.7, and mostly MAC filter changes the allele frequencies distribution (Fig. 10.8. Most filters share mutations, except EVS and BIO that rejected individually a lot mutations shared by the two others (Fig. 10.9. And all filters except MAC are not sensitive to the library coverage (Fig. 10.10. We will thus use two filters for next steps: base: NAC: no copy of the mutated allele in the normal sample (normal_altCountT1 == 0) MAC: a minimum of 5 copies of the mutated allele in the mutated sample (mutation_altCount &gt;= 5) DP: a read depth for the two sample between the 10th quantile and the 90th quantile of the coverage of the mutated library (normal_DP &lt;= high_cov, normal_DP &gt;= low_cov, mutation_DP &lt;= high_cov, mutation_DP &gt;= low_cov) BIO: the mutation is present in at least two biological replicates (2 leaves from the crown) evs: base EVS: Strelka 2 automatic filtering based on the empiric variant score (Filter == \"PASS\") Figure 10.7: Percentage of kept mutations per filter. Figure 10.8: Alleles frequencies of filtered mutations. Figure 10.9: Filtered mutations sharing across filters. Figure 10.10: Link between the number of detected mutations and the coverage across samples depending on the filter used. 10.5 Leaf mutations Only 30 to 89 mutations passed evs filtering across samples (Fig. ??). Most of mutations are low frequency (Fig. 10.12). Most of mutations are not shared by biological replicates (Fig. 10.13 and Fig. 10.14). Figure 10.11: Number of filtered mutations per leaf. Figure 10.12: Alleles-frequencies of filtered mutations in leaf samples. Figure 10.13: Filtered mutations sharing across leaf samples within tips for evs filtering. Figure 10.14: Filtered mutations sharing across leaf samples within tips for base filtering. 10.6 Mutations architecture 10.7 Phylogeny 10.8 Light &amp; annotation Figure 10.15: Number of mutations per filter and light condition across branches. 10.9 Rate 10.10 Mutations for Fruits Selection of mutations for transmission in fruits. Table 10.1: Number of mutations per branch. replicate N minAF meanAF maxAF 18 1 0.06 0.06 0.06 10 1 0.06 0.06 0.06 8 1 0.05 0.05 0.05 7 3 0.05 0.08 0.10 6 4 0.04 0.05 0.05 5 8 0.03 0.04 0.06 4 26 0.04 0.06 0.21 3 80 0.03 0.06 0.50 10.11 Genes cd data/mutations/angela/annotation ~/Tools/gffread/gffread trsc.fa.transdecoder.gff3 -T -o trsc.fa.transdecoder.gtf perl ~/Tools/SNPdat_package_v1.0.5/SNPdat_v1.0.5.pl \\ -i SNPsOnTrsc.tsv \\ -g trsc.fa.transdecoder.gtf \\ -f trsc.fa \\ -s synonymy.summary \\ -o synonymy.output Figure 10.16: Mutations types. Figure 10.17: Mutation allelic fraction per type. Figure 10.18: Synonymy with allelic fraction. Figure 10.19: GO enrichment for Angela non-synonymous mutations. "],["mutations-sixto.html", "Chapter 11 Mutations Sixto 11.1 Quality check 11.2 Genome 11.3 Rubrynolide enzymes 11.4 Heterozygosity 11.5 Mutations filters 11.6 Leaf mutations 11.7 Mutations architecture 11.8 Phylogeny 11.9 Light &amp; annotation 11.10 Rate 11.11 Mutations for Fruits 11.12 Genes", " Chapter 11 Mutations Sixto This chapter describes the analyses of Sixto mutations currently done in the the sixto branch of the detectMutations repository. 11.1 Quality check The results of multiQC are available for the haplotypes HS1 here. They globally all gave a green light for subsequent analyses. 11.2 Genome Figure 11.1: Quality assesment of Sixto’s genome. A. Anchored scaffolds size-distribution for anchored haplotypes HS1 in Sixto’s genome. B. BUSCO results for haplotypes HS1 and HS2. Figure 11.2: Coverage distribution. Distribution of the number of locations in the reference genome with a given depth of coverage. Figure 11.3: Genome coverage and GC-content on a 10-kb windows for the HS1 haplotype (all anchored scaffolds). 11.2.1 Annotation 11.2.2 Mutations 11.2.3 Comp ## ## Call: ## glm(formula = mutations ~ percentage_gene, family = &quot;poisson&quot;, ## data = all) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.03310 0.03008 -34.341 &lt;2e-16 *** ## percentage_gene -0.31327 0.17572 -1.783 0.0746 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for poisson family taken to be 1) ## ## Null deviance: 8665.7 on 8236 degrees of freedom ## Residual deviance: 8662.5 on 8235 degrees of freedom ## AIC: 13107 ## ## Number of Fisher Scoring iterations: 6 ## ## Call: ## glm(formula = mutations ~ percentage_te, family = &quot;poisson&quot;, ## data = all) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.50617 0.06899 -21.832 &lt; 2e-16 *** ## percentage_te 0.62403 0.10430 5.983 2.19e-09 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for poisson family taken to be 1) ## ## Null deviance: 10017.9 on 9724 degrees of freedom ## Residual deviance: 9982.1 on 9723 degrees of freedom ## AIC: 15066 ## ## Number of Fisher Scoring iterations: 6 11.3 Rubrynolide enzymes On https://img.jgi.doe.gov/cgi-bin/m/main.cgi &gt; Find gene &gt; dplyr::select All &gt; Add dplyr::selected to Gene Cart &gt; Uplad &amp; Export &gt; FASTA Nucleic Acid format &gt; Show in export format &gt; Copy in rubrynolide.fa cd data/mutations/sixto/genome/ ~/Tools/blatSrc/bin/blat HS1_Sru_omap1_hap1_HYBRID_SCAFFOLD.fa rubrynolide.fa rubrynolide_on_sixto_anchored.psl No match! 11.4 Heterozygosity We used k-mer analyses (21-mers) using jellyfish and the GenomeScope to estimate genetic diversity \\(\\pi=0.901%\\) (Fig. 11.4). We detected and filtered SNPs as follow: Raw: raw result from GATK HaplotypeCaller + GenomicsDBImport + GenotypeGVCFs Biallelic: biallelic sites with bcftools SNP SNPs with GATK Filtered: SNPs with QUAL &lt; 30, QD &lt; 2, FS &gt; 60, SOR &gt; 3 using GATK Non-missing: SNPs in all genotypes and individuals with plink Shared=8M : shared SNPs by at least 32 out of 33 individuals with bcftools Figure 11.4: GenomeScope Profile. Full results here: http://genomescope.org/analysis.php?code=Esy8w8C9yQa4rmw87o6y. 11.5 Mutations filters We removed all candidate mutations present in the heterozygous sites and in the raw candidate mutations from the cambium. We kept only mutations with no copy of the mutated allele in the normal sample (NAC, normal_altCount == 0). We tested independently the effect of 4 filters and look their effect on (1) the percentage kept, (2) the distribution of allelic frequencies, and (3) the overlap between filters: MAC: a minimum of 5 copies of the mutated allele in the mutated sample (mutation_altCount &gt;= 5) DP: a read depth for the two sample between the 5th quantile and the 95th quantile of the coverage of the corresponding library (normal_DP &lt;= high_cov, normal_DP &gt;= low_cov, mutation_DP &lt;= high_cov, mutation_DP &gt;= low_cov) BIO: the mutation is present in at least two biological replicates (2 leaves from the crown) EVS: Strelka 2 automatic filtering based on the empiric variant score (Filter == \"PASS\") MAC and EVS are the most stringent filters (Fig. 10.7, and mostly MAC filter changes the allele frequencies distribution (Fig. 10.8. Most filters share mutations, except EVS and BIO that rejected individually a lot mutations shared by the two others (Fig. 10.9. And all filters except MAC are not sensitive to the library coverage (Fig. 10.10. We will thus use two filters for next steps: base: NAC: no copy of the mutated allele in the normal sample (normal_altCountT1 == 0) MAC: a minimum of 5 copies of the mutated allele in the mutated sample (mutation_altCount &gt;= 5) DP: a read depth for the two sample between the 10th quantile and the 90th quantile of the coverage of the mutated library (normal_DP &lt;= high_cov, normal_DP &gt;= low_cov, mutation_DP &lt;= high_cov, mutation_DP &gt;= low_cov) BIO: the mutation is present in at least two biological replicates (2 leaves from the crown) evs: base EVS: Strelka 2 automatic filtering based on the empiric variant score (Filter == \"PASS\") Figure 11.5: Percentage of kept mutations per filter. Figure 11.6: Alleles frequencies of filtered mutations. Figure 11.7: Filtered mutations sharing across filters. Figure 11.8: Link between the number of detected mutations and the coverage across samples depending on the filter used. 11.6 Leaf mutations 14 to 59 mutations passed evs filtering across samples (Fig. ??). Most of mutations are low frequency (Fig. 11.10). Most of mutations are not shared by biological replicates (Fig. 11.11 and Fig. 11.12). Figure 11.9: Number of filtered mutations per leaf. Figure 11.10: Alleles-frequencies of filtered mutations in leaf samples. Figure 11.11: Filtered mutations sharing across leaf samples within tips for evs filtering. Figure 11.12: Filtered mutations sharing across leaf samples within tips for base filtering. 11.7 Mutations architecture 11.8 Phylogeny 11.9 Light &amp; annotation Figure 11.13: Number of mutations per filter and light condition across branches. 11.10 Rate 11.11 Mutations for Fruits Selection of mutations for transmission in fruits. Table 11.1: Number of mutations per branch. replicate N minAF meanAF maxAF 18 1 0.37 0.37 0.37 6 3 0.10 0.11 0.11 5 5 0.07 0.09 0.11 4 4 0.08 0.09 0.10 3 23 0.07 0.09 0.13 11.12 Genes cd data/mutations/sixto/annotation ~/Tools/gffread/gffread trsc.fa.transdecoder.gff3 -T -o trsc.fa.transdecoder.gtf perl ~/Tools/SNPdat_package_v1.0.5/SNPdat_v1.0.5.pl \\ -i SNPsOnTrsc.tsv \\ -g trsc.fa.transdecoder.gtf \\ -f trsc.fa \\ -s synonymy.summary \\ -o synonymy.output Figure 11.14: Mutations types. Figure 11.15: Mutation allelic fraction per type. Figure 11.16: Synonymy with allelic fraction. Figure 11.17: GO enrichment for Angela non-synonymous mutations. "],["comparisons-2.html", "Chapter 12 Comparisons 2 12.1 Genomes 12.2 Libraries 12.3 Mutations 12.4 Frequencies 12.5 Phylogeny 12.6 Light 12.7 Type 12.8 Spectra 12.9 Rates 12.10 Annotations 12.11 Genes 12.12 Fruits", " Chapter 12 Comparisons 2 This chapter compares the mutations of Sixto and Angela on the basis of the closest possible filtering. 12.1 Genomes The total genome size of Sextonia rubra is larger than that of Dicoryinia guyanensis, but the Dicoryinia guyanensis genome was better assembled in fewer scaffolds (Fig. 12.1). Figure 12.1: Caption. Figure 12.2: Caption. 12.2 Libraries As expected, Angela’s sequencing depth is twice as high as Sixto’s, averaging about 150X versus 80X (Fig. 12.3), which translates into greater accepted sequencing depth in Angela (note that as a result, Sixto’s libraries are less filtered in terms of coverage, Fig. 12.4). Figure 12.3: Caption. Figure 12.4: Caption. 12.3 Mutations The origins of the mutations are distributed in the crown, but most of the mutations with basic filtering come from the base of the crown, followed by the carpenter, the branches and finally the tips (Fig. 12.5). Interestingly, stronger filtering favoured mutations in the tips as well as at the base of the crown. Figure 12.5: Caption. 12.4 Frequencies Surprisingly, the allelic frequencies of mutations occurring at the base of the crown are not significantly higher than those at the tips (Fig. 12.6). Figure 12.6: Caption. Figure 12.7: Caption. Figure 12.8: Caption. 12.5 Phylogeny Therefore, mutations are strongly shared across the crown and do not always follow the architecture. As a result, the phylogeny of the mutations does not match the architecture of the tree, with the exception of branch I, which is conserved in Sixto (Fig. 12.9 &amp; Fig. ??). ## ## Setting initial dates... ## Fitting in progress... get a first set of estimates ## (Penalised) log-lik = -6.362752 ## Optimising rates... dates... -6.362752 ## Optimising rates... dates... -6.361982 ## ## log-Lik = -6.306181 ## PHIIC = 66.66 Figure 12.9: Caption. 12.6 Light The light condition of the sampled tips at the time of sampling did not affect the number of mutations observed per library (Fig. ??). Figure 12.10: Caption. Figure 12.11: Caption. Figure 12.12: Caption. Figure 12.13: Caption. Figure 12.14: Caption. 12.7 Type Mutation types are similar between Angela and Sixto, with the exception of an increase in C-&gt;A and C-&gt;T but a decrease in T-&gt;A in Sixto compared to Angela, which are probably due to the sampling effect (Fig. 12.15, to be further investigated). Figure 12.15: Caption. 12.8 Spectra The mutation spectra are similar between Angela and Sixto, with a few exceptions that are probably due to a sampling effect (Fig. 12.16, to be explored further). Figure 12.16: Caption. 12.9 Rates Angela and Sixto show ten to ten thousand mutations depending on the filtering and the minimum accepted allelic frequency (Fig. 12.17). Using base filtering, Angela has a higher number of mutations than Sixto, due to the twofold sequencing depth. Nevertheless, ev filtering gave a similar number of mutations close to thousands in both trees. Figure 12.17: Caption. 12.10 Annotations In progress. 12.11 Genes In progress. ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## tree 1 15.52 15.522 87.89 &lt; 2e-16 *** ## synonymy 1 10.63 10.633 60.20 1.47e-14 *** ## Residuals 1698 299.90 0.177 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 12.12 Fruits 12.12.1 From SSRseq Olivier 12.12.1.1 Align genotypes library(Biostrings) candidates &lt;- bind_rows( read_tsv(&quot;data/mutations/fruits/angela_fruits_candidate_mutations.tsv&quot;) %&gt;% mutate(mutation = 1:n(), tree = &quot;Angela&quot;), read_tsv(&quot;data/mutations/fruits/sixto_fruits_candidate_mutations.tsv&quot;) %&gt;% mutate(mutation = 125:(124+n()), tree = &quot;Sixto&quot;) ) %&gt;% dplyr::select(CHROM, POS, REF, ALT, af, branch, mutation, tree) %&gt;% mutate(CHROM = as.numeric(gsub(&quot;Super-Scaffold_&quot;, &quot;&quot;, CHROM))) alleles &lt;- readxl::read_xlsx(&quot;data/mutations/fruits/SSRseq_TreeMutation_DataAnalysis.xlsx&quot;, &quot;AlleleInformation&quot;) %&gt;% dplyr::rename(locus = Locus, genotype = AlleleSeqCode, sequence = AlleleSequence) %&gt;% dplyr::select(locus, genotype, sequence) %&gt;% mutate(locus2 = gsub(&quot;TreeMut_SNP-&quot;, &quot;&quot;, locus)) %&gt;% separate(locus2, c(&quot;mutation&quot;, &quot;pos&quot;), &quot;_Super-Scaffold_&quot;, convert = T) %&gt;% separate_rows(mutation, convert = T) %&gt;% separate(pos, &quot;CHROM&quot;, convert = T) %&gt;% left_join(candidates) %&gt;% mutate(name = paste0(&quot;SNV&quot;, sprintf(&quot;%03d&quot;, mutation), &quot;_A&quot;, genotype)) angela_alleles &lt;- DNAStringSet(filter(alleles, tree == &quot;Angela&quot;)$sequence) names(angela_alleles) &lt;- filter(alleles, tree == &quot;Angela&quot;)$name writeXStringSet(angela_alleles, &quot;data/mutations/fruits/angela_alleles.fa&quot;) sixto_alleles &lt;- DNAStringSet(filter(alleles, tree == &quot;Sixto&quot;)$sequence) names(sixto_alleles) &lt;- filter(alleles, tree == &quot;Sixto&quot;)$name writeXStringSet(sixto_alleles, &quot;data/mutations/fruits/sixto_alleles.fa&quot;) refs &lt;- bind_rows(readxl::read_xlsx(&quot;data/mutations/fruits/treemutation_fruits.xlsx&quot;, &quot;Sixto&quot;) %&gt;% mutate(tree = &quot;Sixto&quot;), readxl::read_xlsx(&quot;data/mutations/fruits/treemutation_fruits.xlsx&quot;, &quot;Angela&quot;) %&gt;% mutate(tree = &quot;Angela&quot;)) %&gt;% mutate(library = paste0(Code_Espece, Tube), tissue = Tissu) %&gt;% dplyr::select(library, tree, tissue) %&gt;% bind_rows(readxl::read_xlsx(&quot;data/mutations/fruits/Angela.xlsx&quot;, &quot;libraries&quot;) %&gt;% mutate(tissue = paste(&quot;branch&quot;, branch), library = idOld, tree = &quot;Angela&quot;) %&gt;% dplyr::select(library, tree, tissue)) %&gt;% bind_rows(readxl::read_xlsx(&quot;data/mutations/fruits/Sixto.xlsx&quot;, &quot;samples&quot;) %&gt;% mutate(tissue = paste(&quot;branch&quot;, Branch), library = id, tree = &quot;Sixto&quot;) %&gt;% dplyr::select(library, tree, tissue)) bwa mem -t 2 ../angela/genome/Dgu_HS1_HYBRID_SCAFFOLD.fa angela_alleles.fa | samtools sort &gt; angela_alleles_aligned.bam samtools index angela_alleles_aligned.bam bwa mem -t 2 ../sixto/genome/HS1_Sru_omap1_hap1_HYBRID_SCAFFOLD.fa sixto_alleles.fa | samtools sort &gt; sixto_alleles_aligned.bam samtools index sixto_alleles_aligned.bam 12.12.1.2 Automate IGV conda create -n igvreports python=3.7.1 conda activate igvreports pip install igv-reports conda deactivate conda activate igvreports create_report data/mutations/fruits/angela_fruits_candidate_mutations.tsv \\ data/mutations/angela/genome/Dgu_HS1_HYBRID_SCAFFOLD.fa \\ --sequence 2 --begin 3 --end 3 \\ --flanking 1000 \\ --info-columns SNV CHROM POS REF ALT af replicate branch rank \\ --tracks data/mutations/fruits/angela_alleles_aligned.bam data/mutations/angela/annotation/Dgu_HS1_HYBRID_SCAFFOLD.fa.out.gff \\ --output data/mutations/fruits/angela_fruits_aligned.html conda deactivate conda activate igvreports create_report data/mutations/fruits/sixto_fruits_candidate_mutations.tsv \\ data/mutations/sixto/genome/HS1_Sru_omap1_hap1_HYBRID_SCAFFOLD.fa \\ --sequence 2 --begin 3 --end 3 \\ --flanking 1000 \\ --info-columns SNV CHROM POS REF ALT af replicate branch rank \\ --tracks data/mutations/fruits/sixto_alleles_aligned.bam data/mutations/sixto/annotation/HS1_Sru_omap1_hap1_HYBRID_SCAFFOLD.fa.out.gff \\ --output data/mutations/fruits/sixto_fruits_aligned.html conda deactivate 12.12.1.3 Results ## Type Angela Sixto Total Percentage ## 1 mutation 16 5 21 15 ## 2 reference only 81 20 101 72 ## 3 suspect 11 6 17 12 ## 4 unaligned 16 5 21 15 pdf( &quot;data/mutations/fruits/fruits_mutations.pdf&quot;) for(i in 1:ggforce::n_pages(graph)) print(graph + ggforce::facet_wrap_paginate(~title, scales = &quot;free&quot;, ncol = 1, nrow = 1, page = i)) dev.off() 12.12.1.4 Tissues SNV FALSE TRUE agreement SNV006 0 52 100 SNV013 0 50 100 SNV031 0 52 100 SNV054 1 51 98 SNV057 8 44 85 SNV107 6 46 88 SNV128 0 19 100 SNV132 0 19 100 SNV151 0 20 100 SNV160 0 19 100 fruit cotyledon embryo sac A1 NA homozygous A10 homozygous homozygous A11 homozygous homozygous A12 homozygous heterozygous A13 homozygous homozygous A14 homozygous homozygous A15 heterozygous heterozygous A16 homozygous homozygous A17 NA homozygous A18 homozygous heterozygous A19 homozygous homozygous A2 homozygous homozygous A20 homozygous homozygous A3 homozygous homozygous A4 homozygous homozygous A5 homozygous heterozygous A6 homozygous heterozygous A7 homozygous homozygous A8 homozygous homozygous A9 homozygous homozygous B1 homozygous homozygous B10 homozygous homozygous B11 homozygous homozygous B12 homozygous homozygous B13 homozygous homozygous B14 homozygous homozygous B15 homozygous homozygous B16 homozygous heterozygous B17 homozygous homozygous B18 homozygous heterozygous B19 heterozygous heterozygous B2 homozygous homozygous B20 homozygous homozygous B21 homozygous homozygous B22 homozygous homozygous B23 homozygous NA B24 homozygous homozygous B25 homozygous homozygous B3 homozygous homozygous B4 homozygous homozygous B5 homozygous heterozygous B6 homozygous homozygous B7 homozygous homozygous B8 homozygous homozygous B9 homozygous homozygous C1 NA homozygous C2 homozygous homozygous C3 homozygous homozygous D1 homozygous homozygous D2 homozygous homozygous D3 homozygous heterozygous D5 NA homozygous SNV cotyledon embryo sac endocarpe pericarpe SNV006 7 7 1 NA SNV013 2 3 NA NA SNV031 NA 1 NA NA SNV054 NA 1 3 NA SNV057 2 10 6 NA SNV107 1 6 1 NA SNV128 NA 1 NA NA SNV132 NA 1 NA 2 SNV151 NA 1 NA 3 SNV160 NA 1 NA 3 12.12.1.5 Frequencies "],["comparisons-5.html", "Chapter 13 Comparisons 5 13.1 Genomes 13.2 Libraries 13.3 Mutations 13.4 Frequencies 13.5 Types 13.6 Spectra 13.7 Rates", " Chapter 13 Comparisons 5 This chapter compares the mutations of Napoleon, 3P, the dwarf beech, Sixto and Angela based on the closest possible filtering. 13.1 Genomes 13.2 Libraries 13.3 Mutations Figure 13.1: Caption. 13.4 Frequencies 13.5 Types Figure 13.2: Caption. 13.6 Spectra Figure 13.3: Caption. 13.7 Rates 13.7.1 Cummulated distributions tree N 3P 13976 Angela 15066 Napoleon 2356 Sixto 3208 Verzy 6560 13.7.1.1 V3 13.7.1.2 V2 13.7.1.3 V1 13.7.1.4 Other versions Figure 13.4: Caption. 13.7.2 Lognormal distributions Figure 13.5: Caption. 13.7.3 Exponential distrbutions 13.7.4 Power law distribution "],["manuscript-figures.html", "Chapter 14 Manuscript figures 14.1 Figure 3", " Chapter 14 Manuscript figures This chapter develop the code for figure preparation for the final manuscript. 14.0.1 Figure 1 Figure 14.1: Fig. 1 | Crown mutations and transmitted mutations in the genomic landscape of Angela and Sixto assembled pseudo-chromosomes. The genomic landscape is similarly portrayed for the two tropical trees: the Dicorynia guianensis tree named Angela (a), and the Sextonia rubra tree named Sixto (b). The first (most external) track represents the percentage of GC in the whole genome with the black line and in the transposable elements with the green line. The second (least external) track represents the percentage of transposable elements with purple bars. The third track (middle) represents the percentage of genes with blue bars. The fourth (least internal) track represents the number of somatic mutations detected in the tree crown with yellow bars. The fifth (innermost) track represents the allelic fraction of the somatic mutations detected in the tree crown in yellow and the somatic mutations transmitted to the embryos in red. The inner labels indicate the type of mutations for somatic mutations transmitted to embryos. All measurements are calculated in non-overlapping windows of 100 kb. A ruler is drawn on each pseudo-chromosome, with tick marks every 2 Mb. 14.0.2 Figure 2 Figure 14.2: Fig. 2 | Somatic mutation distributions through physical trees, phylogenies, and with light. Somatic mutation distributions through physical trees, phylogenies, and with light are similarly portrayed for the two tropical trees: the Dicorynia guianensis tree named Angela (a,c,e), and the Sextonia rubra tree named Sixto (b,d,f). (a-b) The physical architecture of the tree is shown in black with the bough names in white boxes. The number of somatic mutations through the crown is indicated in the yellow boxes before the original branching event. The balloons circles indicate the sample points of three leaves in the light-exposed branches (light colours) and in the shaded branches (dark colours). Fruit sampling points are represented by red fruits, with the number of fruits sampled indicated in black. The red boxes with white labels indicate the transmission of mutations to fruit embryos out of the total number of mutations tested. (c-d) A side-by-side comparison of the physical tree (left, branch length in metres) and the maximum likelihood phylogeny (right, branch length in substitutions per site). The letters on the ends of the branches indicate the sample points with unique colours. (e-f) The effect of light exposure on the accumulation of somatic mutations as a function of mutation type is represented in yellow and grey boxes. The yellow boxes represent the number of mutations accumulated in all leaves of light exposed branches and the grey boxes in all leaves of shaded branches. The ‘ns’ labels indicate non-significant differences in Student’s t-tests. Mutation types include all mutations and all types of transitions and transversions. The y-axis has been scaled logarithmically to facilitate reading of low values. 14.1 Figure 3 Figure 14.3: Fig. 3 | Allelic fractions of somatic mutations among trees and among genomic elements. Histogram of allelic fractions of mutations detected in the crown of the two tropical trees: the Dicorynia guianensis tree named Angela (a), and the Sextonia rubra tree named Sixto (b). The main histogram shows the allelic fractions of the somatic mutations using a bin of 0.02 and a log-transformed count with the mutations detected in the crown in yellow, the mutations tested for transmission in grey, and the mutations transmitted to the embryos in red. The inner histogram shows the allelic fractions of the somatic mutations using a bin of 0.001 and a natural count. (c) Cumulative number of somatic mutations per branch with decreasing allelic fraction for five trees reanalysed with the same pipeline. The five trees include the two tropical trees studied, the Dicorynia guianensis tree named Angela in orange and the Sextonia rubra tree named Sixto in red, and three temperate trees, two pedunculate oaks Quercus robur named 3P in green and Napoleon in blue and a tortuous beech Fagus sylvatica named Verzy in purple. All trees were analysed with the same pipeline (see methods) but were sequenced with a different depth indicated in brackets. The line represents the median value while the area represents the minimum and maximum values on the 2 to 10 branches per tree. (d) Comparisons of allelic fractions for non-synonymous mutations in red with synonymous mutations in yellow, intronic mutations in green and intergenic mutations in blue for the two tropical trees: the Dicorynia guianensis tree named Angela (left panel), and the Sextonia rubra tree named Sixto (right panel). The p-value above the bars indicates the significance of the Student’s T-test for the pairs of groups. "],["manuscript-figures-evs.html", "Chapter 15 Manuscript figures EVS 15.1 Figure 2 EVS 15.2 Figure 3 EVS", " Chapter 15 Manuscript figures EVS This chapter develop the code for figure preparation for the final manuscript. 15.1 Figure 2 EVS 15.2 Figure 3 EVS Figure 15.1: Fig. 3 | Allelic fractions of somatic mutations among trees and among genomic elements. Histogram of allelic fractions of mutations detected in the crown of the two tropical trees: the Dicorynia guianensis tree named Angela (a), and the Sextonia rubra tree named Sixto (b). The main histogram shows the allelic fractions of the somatic mutations using a bin of 0.02 and a log-transformed count with the mutations detected in the crown in yellow, the mutations tested for transmission in grey, and the mutations transmitted to the embryos in red. The inner histogram shows the allelic fractions of the somatic mutations using a bin of 0.001 and a natural count. (c) Cumulative number of somatic mutations per branch with decreasing allelic fraction for five trees reanalysed with the same pipeline. The five trees include the two tropical trees studied, the Dicorynia guianensis tree named Angela in orange and the Sextonia rubra tree named Sixto in red, and three temperate trees, two pedunculate oaks Quercus robur named 3P in green and Napoleon in blue and a tortuous beech Fagus sylvatica named Verzy in purple. All trees were analysed with the same pipeline (see methods) but were sequenced with a different depth indicated in brackets. The line represents the median value while the area represents the minimum and maximum values on the 2 to 10 branches per tree. (d) Comparisons of allelic fractions for non-synonymous mutations in red with synonymous mutations in yellow, intronic mutations in green and intergenic mutations in blue for the two tropical trees: the Dicorynia guianensis tree named Angela (left panel), and the Sextonia rubra tree named Sixto (right panel). The p-value above the bars indicates the significance of the Student’s T-test for the pairs of groups. "],["appendix-1-meetings.html", "A Appendix 1: Meetings A.1 11/02/2021 Sylvain’s Kick-off A.2 27/05/2021 William Marrande A.3 06/07/2021 Mutation detection A.4 21/01/2022 Mid-project meeting A.5 10/02 Carrotage A.6 05/05 Sixto’s results A.7 20-21/03 Mutations days", " A Appendix 1: Meetings A.1 11/02/2021 Sylvain’s Kick-off NT, MH, &amp; SS A.1.1 Funding GPR (labex COTE + idex UB): audition 01/21, answer 03-06/21 Currently enough for 2 species this year A.1.2 Site Regina 1 LiDAR in 2016 (ONF, see Fig. 2.1 and Fig. @ref(fig:2.1)) Possibility of clearing for drone Destructive sampling for tree rings? Coring individuals. Ask ONF. Higher trees. Maybe not older but at least implying more cell divisions regarding mutations. Paracou 4 LiDAR campaigns from 2004 to 2015 (Fig. ??) Proximity, easier to follow phenology and collect flowers and fruits A.1.3 Species Dicorynia guyanensis … Eschweilera sp Sextonia rubra: already sampled Paracou Dicorynia: Paracou &amp; Regina flowering time? Ask Natalia Norden and Jerome Chave for original data + Patrick Heuret for his shared article Suggestion: spot one already flowering before sampling Check the phenology at the herbarium Eschwerilera sp: Parcou (small) and Regina (big) Handoranthus sp: published genosegmenmes (to read) but high variation Regina Need to be collected for flux cytometry Caryocar sp: Paracou (big) many lianas no self shading? A.1.4 Field work Regina beginning of march wood samples drone dry leaves of Handoranthus sp for flux cytometry from our favorite individuals and two other potential candidates Sample (Big shot) Eschweilera sp for identification and gene pool attribution with Myriam’s SSRseq experiment (results in spring) Paracou Dycorinia from interplots. Ask Partick Heuret and Eric Nicolini. A.1.5 Genomics Check flux cytometry confidence: plot second against first sampling for confidence envelope (Fig. ??) choose what to sequence get in touch asap sequencing company High molecular DNA extraction at CNRGV Bionano with CNRGV PacBio for HiFi reads A.2 27/05/2021 William Marrande A.2.1 Sampling No experience on cambium PacBio 50-150kb &lt; Bionano CTAB or Kit Send by plane A.2.2 Assembly PacBio HiFi best contiguity hifiasm separate haplophase different apporaches for optical map calssical assembly with bionano software (only 3% of N recently) if issues (gaps or N), local tools to make it better A.3 06/07/2021 Mutation detection A.3.1 Virtual experiment Barplot of callers performance across AF at low (50X) and high (100X) coverage Check VarScan AF=0.1 C=200 A.3.2 Swiss data Map swiss mutations (+1000 bp) on 3P genome Compare GATK/Strelka2 Full genome Stringent filters common with both GATK and Strelka2 A.3.3 Angela A.4 21/01/2022 Mid-project meeting A.4.1 Notes UVs can have a different signal than direct light exposure measured by Accupar or currently modeled with lidar data (up to 20-30% uncertainty according to G. Vincent) lidar gave a hieght of 50.6m against 51.25 with tree climbing. This erros below the meter is very encouraging. Herrera CM 2019 on the phenotypic variability within individual trees or plants Screwdriver can be good to initiate the auger (O. Martin) A.4.2 Follow-up Branch dating discuss with Patrick and perhaps Romain methodology, sampling points, tools etc plan a mission with climbers send samples to Patrick Direct light measurement: not primordial to do aside from a mission if time Mutation detection: continue with the plan Offspring genotyping: meet with geneticists to discuss samples and techniques, dimensions of the assay. Data management: discuss archiving with everybody, e.g. NCBI for raw genomic data, Zenodo for cleaned genomic data, GitHub for codes, what for the others (lidar) ? A.5 10/02 Carrotage Patrick, Niklas, moi Jocelyn, Valentine, Patrick, Niklas?, me?, Olivier Brunaux? 21-25/03 3 days Book climbers Book 2 cars Book accommodation in St-George or Regina OM for me, Niklas and Jocelyn Material carottage =&gt; Patrick climbing kit, ask Ilo Accupar A.6 05/05 Sixto’s results Niklas, Myriam, Thibault, me Globally: don’t follow archi, no signal in UVs, and the estimate gives a high # of low AF mutations + evidence the difficulty to estimate mutations # comparing with previous studies Next steps: annotation (w transcripts, contact Christophe &amp; Isabelle) &amp; transmission (suggest a number of shared mutations in branches with position in the genome + ranking) Meeting: schedule a meeting with everybody to discuss valorisation 3 papaers: 2 genomes, 1 mutations Save data Follow mutations sharing along architecture (cell surfing idea) Add architecture when comparing phylogenies Add comparisons with oka if possible A.7 20-21/03 Mutations days Collection Chêne Saint-Malo mutasom limitée majoritairement neutre rare dans la population donc lente à se répandre minmap for pangenome graph =&gt; Verzy ? Karst et al. 2023 overinterpretation myccorhizal "],["appendix-2-tree-3d.html", "B Appendix 2: Tree 3D B.1 Tree Segmentation B.2 Tree architecture B.3 Tree light B.4 Tree Segmentation", " B Appendix 2: Tree 3D The aim of this appendix is to test tree segmentation and light on the las cloud from Dicorynia guyanensis in Paracou. B.1 Tree Segmentation Using lidr. Works well to delineate the tree cloud but not build back architecture. Can be a good step for AMAPvox. Figure B.1: Individual segmented with lidR. B.2 Tree architecture The reconstruction of the architecture, i.e. rebuilding the trunk and the branches. On this point there are plenty of poorly documented, impossible to install and not so open tools. But after a long battle I managed to make treeseg work a bit despite its lack of real documentation. And as I suspected unfortunately the data doesn’t seem to be good enough for this task. Indeed, besides the fact that we are in a complex rainforest, this reconstruction is normally done from high resolution LiDAR TLS data. But here I have only few points that represent the trunk or the main branches. The algorithm is therefore unable to reconstruct the cylinders. B.3 Tree light For this part I am still waiting for Nicolas to share with me the trajectos (3D path of the drone) to use AMAPvox. Nevertheless I don’t see how this will orientate more the sampling than using a device on the spot like with the Sextonia, especially if we can’t reconstruct the architecture beforehand. So I think I’ll stop here and wait for the postdoc to face this calculation for the a posteriori analysis of the mutations. B.4 Tree Segmentation This v explored tree segmentation with QSM on the las cloud from Dicorynia guyanensis in Paracou. B.4.1 treeseg Failed, and no further documentation, dropping thus treeseg. ## Convert # las to pcd pdal translate YS-20201123-130625classclipDycorinia.las test.pcd --writers.pcd.order=&quot;X=Float:2,Y=Float:2,Z=Float:2&quot; # to avoid float issue # visualize in cloud compare tail -n +11 test.pcd &gt; test.xyz # computing bounding box Rscript -e &#39;summary(readr::read_delim(&quot;test.xyz&quot;, col_names = F, delim = &quot; &quot;)[1:2])&#39; echo 286791 286811 583888 583910 &gt; test.dat # fixing variables # open with geany and replace X Y Z by x y z (should be further automated) ## downsample # 1. resoluation in meters ~/Tools/treeseg/build/downsample 0.001 test.pcd # 0.04 online ~/Tools/treeseg/build/pcdPointTreeseg2txt test.tile.downsample.test.pcd ## getdemslice # 1. the resolution of the DEM in meters # 2) the percentile which is considered to constitute the ground (i.e., if all the points inside each DEM tile are lined up by their z coordinate - the point closest to the Nth percentile is considered the ground - sometimes useful for noisy data). # 3)&amp;4) The zmin and zmax of the slice. So e.g.,: ~/Tools/treeseg/build/getdemslice 1 1 0 5 test.tile.downsample.test.pcd # 2 3 3 6 ~/Tools/treeseg/build/pcdPointTreeseg2txt test.slice.pcd ## Find stems ~/Tools/treeseg/build/findstems 15 0.2 2 test.dat test.slice.pcd ~/Tools/treeseg/build/pcdPointTreeseg2txt test.intermediate.slice.clusters.pcd ~/Tools/treeseg/build/pcdPointTreeseg2txt test.intermediate.slice.clusters.regions.pcd ## Segments stems ~/Tools/treeseg/build/segmentstem 12.5 test.tile.downsample.test.pcd test.intermediate.slice.clusters.regions.pcd B.4.2 Computree B.4.2.1 Windows version Not working with wine when calling downsampling with SimpleTree plugin. Test on voncyane windows validated the software, to be tested on Niklas computer thursday afternoon. cd ~/Tools/Computree wget http://rdinnovation.onf.fr/attachments/download/2788/SimpleForest_v5.1.3_computree_v5.0.221b.zip unzip SimpleForest_v5.1.3_computree_v5.0.221b.zip cd SimpleForest_v5.1.3_computree_v5.0.221b/ wine CompuTreeGui.exe Overview: Import the cloud Reduce points density Classify ground points (TLS) Ground point filter Statistical outlier filter Dtm pyramidal Mlesac fit Cut cloud above DTM Cut cloud above DTM Cut cloud above DTM Stem filter Statistical outlier filter Radius outlier filter Segmentation euclidean clustering Dikstra based tree segmentation Voroni based tree segmentation Height based tree identification from segmented clouds Height based tree identification from segmented clouds Cut cloud above dtm Cut cloud above dtm Stem filter Euclidean clustering filter Merge clouds from two groups Statistical outlier filter Euclidean clustering filter Sphere following QSM median filter QSM based tree clustering Sphere following advanced QSM median filter QSM correct shoots QSM allometric correction QSM to ground exploration QSM list exporter B.4.2.2 Linux version Still failing, waiting for Alexandre Piboule feedbacks. cd ~/Tools/Computree sudo apt-get update sudo apt-get install subversion sudo apt-get install build-essential qtcreator qt5-default qt5-doc qt5-doc-html qtbase5-doc-html qtbase5-examples wget http://rdinnovation.onf.fr/attachments/download/2378/kit_dev_linux.zip unzip kit_dev_linux.zip cd kit_dev_linux ./recuperer_depots.sh sudo apt-get install libopencv-dev sudo apt-get install libpcl-dev # pcl 1.10 need pcl 1.8 sudo apt-get install libgdal-dev sudo apt-get install libgsl-dev qtcreator # &gt; open &gt; all.pro # &gt; projet &gt; unactivate shadow build # &gt; projet/run &gt; “Environnement d’exécution” &gt; rajouter ” ;. ” à la fin de la variables LD_LIBRARY_PATH qmake all.pro # &gt; pcl1.8 to pcl1.10 in code sudo ln -s /usr/local/include/opencv4/opencv2/ /usr/local/include/opencv2 # fix opencv2/core/core.hpp issue # &gt; compile # &gt; run B.4.3 Tree Segmentation with lidr Works well to delineate the tree cloud but not to segment it. Can be a good step for AMAPvox. require(lidR) require(rlas) # Necessary for writelax require(rgdal) # Writing to shp or raster require(tictoc) # for tic() toc() function require(rgl) data &lt;- &quot;data/Paracou/AG/YS-20201123-130625classclipDycorinia.las&quot; las &lt;- readLAS(data) # lascheck(las) # summary(las) # sort(unique(las@data$Classification)) # plot(las, color = &quot;Classification&quot;) las_class &lt;- lasfilter(las, Classification == 1) # plot(las_class) dtm &lt;- grid_terrain(las, algorithm = knnidw(k = 8, p = 2)) las_normalized &lt;- lasnormalize(las, dtm) lasfilternoise = function(las, sensitivity) { p95 &lt;- grid_metrics(las, ~quantile(Z, probs = 0.95), 10) las &lt;- lasmergespatial(las, p95, &quot;p95&quot;) las &lt;- lasfilter(las, Z &lt; p95*sensitivity) las$p95 &lt;- NULL return(las) } las_denoised &lt;- lasfilternoise(las_normalized, sensitivity = 1.2) # plot(las_denoised) # plot(las_normalized) chm &lt;- grid_canopy(las_denoised, 0.5, pitfree(c(0,2,5,10,15), c(3,1.5), subcircle = 0.2)) # plot_dtm3d(chm) ker &lt;- matrix(1,5,5) chm_s &lt;- focal(chm, w = ker, fun = median) algo &lt;- watershed(chm_s, th = 10, tol = 0.7, ext = 1) las_watershed &lt;- lastrees(las_denoised, algo) trees &lt;- lasfilter(las_watershed, !is.na(treeID)) plot(trees, color = &quot;treeID&quot;, colorPalette = pastel.colors(100)) path &lt;- &quot;/home/sylvain/Documents/ECOFOG/treemutation/data/Paracou/AG/YSsegmented.gif&quot; movie3d(spin3d(), duration = 5, movie = path) B.4.4 Forest Metrics Hard to install and no better than lidR as it does not segment the crown. sudo apt-get update sudo apt-get install git build-essential linux-libc-dev sudo apt-get install cmake cmake-gui sudo apt-get install libeigen3-dev sudo apt-get install libboost-all-dev sudo apt-get install libflann-dev sudo apt-get install libvtk6-qt-dev sudo apt-get install libqhull-dev sudo apt-get install libproj-dev sudo apt autoremove # pcl skipping 1.10 wget https://github.com/PointCloudLibrary/pcl/archive/pcl-1.8.1.tar.gz tar -xf pcl-1.8.1.tar.gz cd pcl-pcl-1.8.1 &amp;&amp; mkdir build &amp;&amp; cd build cmake .. make sudo make install # ForestMetrics git clone --recursive https://github.com/yurithefury/ForestMetrics.git ForestMetrics cd ForestMetrics mkdir build cd build cmake .. make B.4.5 sp4e Segmenting cloud but no QSM. cd ~/Tools git clone https://github.com/mparkan/sp4e_project.git cd sp4e_project B.4.6 TreeQSM Mathlab, giving this one up. B.4.7 Google Search GitHub tree segmentatuion lidar "],["appendix-3-literature.html", "C Appendix 3: Literature C.1 Genome assembly C.2 Mutation detection C.3 Unclassified C.4 To read", " C Appendix 3: Literature This appendix keeps literature review up-to-date. C.0.1 Bergeron2023 difficulty of com-paring GMR estimates derived using different methodologies alternative bioinformatic pipelines used in different studies can yield GMR estimates that vary by a factor of two a stronger effect of paternal than maternal age on the mutation rate seems to be universal for birds and mammals due to more germline mutations accumulating throughout the life of the male male-driven evolution hypothesis hominoid slowdown hypothesis C.1 Genome assembly C.1.1 Johnson et al. (2020) Draft genome assemblies using sequencing reads from Oxford Nanopore Technology and Illumina platforms for four species of North American Fundulus killifish de novo assembly of high-quality genomes combining short-read Illumina data to polish assemblies from long-read ONT data. C.1.2 Plomion et al. (2018) Oak genome reveals facets of long lifespan C.1.3 Msc also mutation detection Use Cibulskis et al. (2013) to detect somatic mutations orthogroups expanded in tandem duplicated genes are enriched in gene ontology terms relating to biotic interactions (disease-resistance R genes) expanded orthorgroups are more degenerated (higher pi0/pi4) than stable orhogroups rapide selection on leucine-rich repeat receptor like kinase (LRR-RLK) for oak immunity compared genome size from Kmer (Jellyfish) and flux cytometry assembly, TE detection and annotation, gene prediction and annotation, mutation detection consider mutation rate estimation meaningless mutation detection: BWA-MEM + MuTect C.1.4 SI C.1.5 https://www.oakgenome.fr/?page_id=587 C.2 Mutation detection C.2.1 Orr et al. (2019) A phylogenomic approach reveals a low somatic mutation rate in a long-lived plant Methodology 8 samples with Illumina HiSeq 2k5 de novo reference aligned on E. grandis and iteratively corrected using bcftools consensus variant calling for positive control mapping with NGM and variant detection with GATK4 keeping variants present in all three replicates of each branch types at least one branch tip had a different genotype than the other branch tips the site is biallelic (multiple somatic mutations are improbable) total depth is less or equal to ~2 times the expected depth (avoid alignment issues) excessive heterozygosity is less or equal 40 (avoid genotyping errors) the site is not in a repetitive region of E. grandis positive control used to compute phylogenetic trees, comparing the distance to architecture to identify the most pasimonious tree somatic mutations detected using GEAR's dng-call method (Ramu et al. 2013) with expectations bades on the physical tree architecture C.2.2 Ramu et al. (2013) DeNovoGear: De novo indel and point mutation discovery and phasing Tools to detect ponit mutations used in Orr et al. 2019 and compared with SAMtools, polyMutt, and GATK. C.2.3 Hanlon et al. (2019) Somatic mutations substantially increase the per‐generation mutation rate in the conifer Picea sitchensis Methodology gene capture 2 leaf samples and 2 bark samples aligned on natural hybrid NextGenMap GATK haplotype call with -ERC and vcf with invariant and varying sites filter poor quality site filter weakly supported sample (leaf or bark) genotype (MAF&lt;0.05) probably due to sequencing error filtering site and genotype level for high confidence and low confidence mutation pools keep site were all four sample passed bark are the same, leaves are the same, but bark and leaves differ visual check on IGV (alignment errors): All reads that showed the candidate mutant allele also showed a unique allele at a nearby site in the heterozygous samples, and at least one of the homozygous samples contained reads supporting the two alleles At the candidate site and at a nearby polymorphic site, there were three haplotypes in the heterozygous samples, each sup- ported by multiple reads All four samples contained at least one read supporting the candidate mutant allele validated mutations by resequencing with primers Results somatic base substitution rate of 2.7 × 10−8 per base pair within a generation Discussion although somatic mutations raise genetic load in conifers, they generate important genetic variation and enable selection both among cell lineages within individual trees and among offspring C.2.4 Cibulskis et al. (2013) Sensitive detection of somatic point mutations in impure and heterogeneous cancer samples MuTect has higher sensitivity with similar specificity, especially for mutations with allelic fractions as low as 0.1 The sensitivity and specificity of any somatic mutation–calling method varies along the genome and depends on several factors: the depth of sequence coverage in the tumor and a patient-matched normal sample the local sequencing error rate the allelic fraction of the mutation the evidence thresholds used to declare a mutation Methodolgy Somatic mutation detection: alignment of normal and tumor reads marking duplicated reads recalibration of base quality scores local realignement removal of low quality sequence data variant detcion using a bayesian classifier filtering to remove false positive resulting from correlated sequencing artifacts that are not captured by the error model designation of the variants as somatic or germline by a second bayesian classifier Variant detection compare M0 assuming no variant at the site and non-reference bases due to random sequencing errors to M(m,f) assuming true variant allele m at allele fraction f compute log odds score (LOD) and use a threshold depending on expected mutation frequency and desired false positive rate Variant filtering STD standard = no filters vs HC high confidence applying 6 filters Filter proximal gap Filter strand bias Filter poor mapping Filter triallelic site Filter clustered position Filter observed in control Specificity Overcalling events for the tumor data sequencing errors innacurate read placements undercalling germline events in the matched normal data low sequencing depth C.2.5 Nicholson et al. (2018) Fixation and Spread of Somatic Mutations in Adult Human Colonic Epithelium Variant fixation requires all wild-type stem cells to be displaced defining a process of monoclonal conversion of crypts that takes many years in human colonic epithelium. But biased behaviors are confirmed to subvert these processes to achieve variant over representation. C.2.6 Alioto et al. (2015) A comprehensive assessment of somatic mutation detection in cancer using whole-genome sequencing PCR-free library preparation Mutation coverage &gt; 100X Control coverage close to mutation coverage (\\(\\pm10\\%\\)) Optimize aligner/variant caller combination (BWA for SSM with next step) Combine several mutations callers (Strelka and MuTect for SSM) Allow mutations in or near repeats Filter by mapping quality, strand bias, positional bias, presence of soft-clipping to minimize mapping artefacts C.3 Unclassified C.3.1 Michael &amp; VanBuren (2020) Building near-complete plant genomes C.4 To read C.4.1 Belser et al. (2018) C.4.2 Edwards et al. (1990) C.4.3 Leebens-Mack et al. (2019) Schmid-Siegert et al. 2017 C.4.4 links https://academic.oup.com/bioinformatics/article/32/20/3058/2196489?login=true References "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
